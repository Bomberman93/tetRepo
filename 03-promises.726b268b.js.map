{"version":3,"sources":["js/03-promises.js"],"names":["convertS","s","hours","Math","floor","minutes","secunds","refs","innerHTML","toString","padStart","intervalId","secund","document","querySelector","targetTimer","save","onTimerClick","e","target","textContent","clearInterval","setInterval","printTimestamp","timestamp","insertAdjacentHTML","addEventListener","imitatedServer","then","res","times","push","catch","console","log","key","type","data","Promise","rej","setTimeout","random","JSON","parse","localStorage","getItem","setItem","stringify","min","max","getRandomInt"],"mappings":";AAAA,SAASA,EAASC,GACVC,MAAAA,EAAQC,KAAKC,MAAMH,EAAI,GAAK,IAClCA,GAAQ,KAAUC,EACZG,MAAAA,EAAUF,KAAKC,MAAMH,EAAI,IAEzBK,EADNL,GAAQ,GAAKI,EAEbE,EAAKL,MAAMM,UAAYN,EAAMO,WAAWC,SAAS,EAAG,GACpDH,EAAKF,QAAQG,UAAYH,EAAQI,WAAWC,SAAS,EAAG,GACxDH,EAAKD,QAAQE,UAAYF,EAAQG,WAAWC,SAAS,EAAG,GAE1D,IACIC,EADAC,EAAS,EAGb,MAAML,EAAO,CACXL,MAAOW,SAASC,cAAc,UAC9BT,QAASQ,SAASC,cAAc,YAChCR,QAASO,SAASC,cAAc,YAChCC,YAAaF,SAASC,cAAc,iBACpCE,KAAMH,SAASC,cAAc,UAiB/B,SAASG,EAAaC,GACS,SAAzBA,EAAEC,OAAOC,aACXC,cAAcV,GACdO,EAAEC,OAAOC,YAAc,UAEvBT,EAAaW,YAAY,KAEvBtB,EADAY,GAAU,IAET,KACHM,EAAEC,OAAOC,YAAc,QAI3B,SAASG,EAAetB,GAChBC,MAAAA,EAAQC,KAAKC,MAAMH,EAAI,GAAK,IAClCA,GAAQ,KAAUC,EACZG,MAAAA,EAAUF,KAAKC,MAAMH,EAAI,IAEzBK,EADNL,GAAQ,GAAKI,EAEbE,EAAKiB,UAAUC,mBACb,mBACOvB,EAAMO,WAAWC,SAAS,EAAG,MAAML,EAAQI,WAAWC,SAAS,EAAG,MAAMJ,EAC5EG,WACAC,SAAS,EAAG,WArCnBH,EAAKS,KAAKU,iBAAiB,QAASR,IAClCS,EAAe,SAASC,KAAKC,IACrBC,MAAAA,EAAgB,OAARD,EAAe,GAAKA,EAE3BC,OADPA,EAAMC,KAAKnB,GACJkB,IAERF,KAAME,GACEH,EAAe,QAAS,MAAOG,IAEvCE,MAAMC,QAAQC,OAGjB3B,EAAKQ,YAAYW,iBAAiB,QAAST,GA6B3C,MAAMU,EAAiB,CAACQ,EAAKC,EAAO,MAAOC,EAAO,MAGzC,OAAA,IAAIC,QAAQ,CAACT,EAAKU,KACvBC,WAAW,KACTP,QAAQC,IAAI,UACR/B,KAAKsC,SAAW,GACL,QAATL,EACFP,EAAIa,KAAKC,MAAMC,aAAaC,QAAQV,KAClB,QAATC,GACTQ,aAAaE,QAAQX,EAAKO,KAAKK,UAAUV,IACzCR,GAAI,IAEJU,EAAI,gBAEDA,EAAI,YAdM,EAACS,EAAKC,IAAQ9C,KAAKC,MAAMD,KAAKsC,UAAYQ,EAAMD,GAAOA,GAevEE,CAAa,IAAM","file":"03-promises.726b268b.js","sourceRoot":"../src","sourcesContent":["function convertS(s) {\n  const hours = Math.floor(s / 60 / 60);\n  s = s - 60 * 60 * hours;\n  const minutes = Math.floor(s / 60);\n  s = s - 60 * minutes;\n  const secunds = s;\n  refs.hours.innerHTML = hours.toString().padStart(2, 0);\n  refs.minutes.innerHTML = minutes.toString().padStart(2, 0);\n  refs.secunds.innerHTML = secunds.toString().padStart(2, 0);\n};\nlet secund = 0;\nlet intervalId;\n\nconst refs = {\n  hours: document.querySelector('#hours'),\n  minutes: document.querySelector('#minutes'),\n  secunds: document.querySelector('#secunds'),\n  targetTimer: document.querySelector('#target-timer'),\n  save: document.querySelector('#save'),\n};\n\nrefs.save.addEventListener('click', e => {\n  imitatedServer('times').then(res => {\n    const times = res === null ? [] : res;\n    times.push(secund);\n    return times;\n  })\n  .then((times) => {\n    return imitatedServer('times', 'SET', times);\n  })\n  .catch(console.log);\n});\n\nrefs.targetTimer.addEventListener('click', onTimerClick);\n\nfunction onTimerClick(e) {\n  if (e.target.textContent === 'Stop') {\n    clearInterval(intervalId);\n    e.target.textContent = 'Start';\n  } else {\n    intervalId = setInterval(() => {\n      secund += 1;\n      convertS(secund);\n    }, 1000);\n    e.target.textContent = 'Stop';\n  }\n};\n\nfunction printTimestamp(s) {\n  const hours = Math.floor(s / 60 / 60);\n  s = s - 60 * 60 * hours;\n  const minutes = Math.floor(s / 60);\n  s = s - 60 * minutes;\n  const secunds = s;\n  refs.timestamp.insertAdjacentHTML(\n    'beforeend',\n    `<li>${hours.toString().padStart(2, 0)}:${minutes.toString().padStart(2, 0)}:${secunds\n      .toString()\n      .padStart(2, 0)}</li>`,\n  );\n};\n\nconst imitatedServer = (key, type = 'GET', data = {}) => {\n  const getRandomInt = (min, max) => Math.floor(Math.random() * (max - min) + min);\n\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      console.log('nikita');\n      if (Math.random() > 0.2) {\n        if (type === 'GET') {\n          res(JSON.parse(localStorage.getItem(key)));\n        } else if (type === 'SET') {\n          localStorage.setItem(key, JSON.stringify(data));\n          res(true);\n        } else {\n          rej('invalid type');\n        }\n      } else rej('oops!!!');\n    }, getRandomInt(1000, 5000));\n  });\n};\n"]}